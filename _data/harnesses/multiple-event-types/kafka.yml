dev:
  steps:
  - title: Prerequisites
    content:
    - action: skip
      render:
        file: shared/markup/dev/docker-prerequisite.adoc
  - title: Initialize the project
    content:
    - action: execute
      file: tutorial-steps/dev/init.sh
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/init.adoc
    - action: execute
      file: tutorial-steps/dev/make-configuration-dir.sh
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/make-config-dir.adoc
  - title: Get Confluent Platform
    content:
    - action: make_file
      file: docker-compose.yml
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/make-docker-compose.adoc
    - action: execute_async
      file: tutorial-steps/dev/docker-compose-up.sh
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/start-compose.adoc
    - action: execute
      file: tutorial-steps/dev/wait-for-containers.sh
      render:
        skip: true
  - title: Create topics
    content:
    - action: execute
      file: tutorial-steps/dev/harness-create-topic.sh
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/create-topic.adoc
  - title: Configure the project
    content:
    - action: make_file
      file: build.gradle
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/make-build-file.adoc
    - action: execute
      file: tutorial-steps/dev/gradle-wrapper.sh
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/make-gradle-wrapper.adoc
    - action: make_file
      file: configuration/dev.properties
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/make-dev-file.adoc
  - title: Create the Protobuf Schemas
    content:
    - action: execute
      file: tutorial-steps/dev/make-proto-dir.sh
      render:
        skip: true
    - action: skip
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/create-proto-schemas.adoc
    - action: make_file
      file: src/main/proto/purchase.proto
      render:
        skip: true
    - action: make_file
      file: src/main/proto/page-view.proto
      render:
        skip: true
    - action: make_file
      file: src/main/proto/customer-event.proto
      render:
        skip: true
  - title: Create the Avro Schemas
    content:
    - action: execute
      file: tutorial-steps/dev/make-avro-dir.sh
      render:
        skip: true
    - action: skip
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/create-avro-schemas.adoc
    - action: make_file
      file: src/main/avro/purchase.avsc
      render:
        skip: true
    - action: make_file
      file: src/main/avro/page-view.avsc
      render:
        skip: true
    - action: make_file
      file: src/main/avro/all-events.avsc
      render:
        skip: true
    - action: execute
      file: tutorial-steps/dev/build-project.sh
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/build-project.adoc
  - title: Register the schemas
    content:
    - action: execute
      file: tutorial-steps/dev/register-schemas.sh
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/register-schemas.adoc
  - title: Create the Protobuf Multi Event application
    content:
    - action: execute
      file: tutorial-steps/dev/make-src-dir.sh
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/make-src-dir.adoc
    - action: make_file
      file: src/main/java/io/confluent/developer/MultiEventProtobufProduceConsumeApp.java
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/make-multi-event-app-protobuf.adoc
  - title: Create the Avro Multi Event application
    content:
    - action: make_file
      file: src/main/java/io/confluent/developer/MultiEventAvroProduceConsumeApp.java
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/make-multi-event-app-avro.adoc
  - title: Compile and run both the Multi Event applications
    content:
    - action: execute
      file: tutorial-steps/dev/build-uberjar.sh
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/build-uberjar.adoc
    - action: execute_async
      file: tutorial-steps/dev/run-dev-app-protobuf.sh
      stdout: tutorial-steps/dev/outputs/actual-output-protobuf.txt
      render:
        file: tutorials/multiple-event-types/kafka/markup/dev/run-dev-app.adoc
    - action: execute_async
      file: tutorial-steps/dev/run-dev-app-avro.sh
      stdout: tutorial-steps/dev/outputs/actual-output-avro.txt
      render:
        skip: true
    - name: wait for the consumers to read all the messages
      action: sleep
      ms: 15000
      render:
        skip: true
test:
  steps:
  - title: Create a test configuration file
    content:
    - action: make_file
      file: configuration/test.properties
      render:
        file: tutorials/multiple-event-types/kafka/markup/test/make-test-file.adoc
  - title: Write tests for the Avro and Protobuf applications
    content:
    - action: execute
      file: tutorial-steps/test/make-test-dir.sh
      render:
        file: tutorials/multiple-event-types/kafka/markup/test/make-test-dir.adoc
    - action: make_file
      file: src/test/java/io/confluent/developer/MultiEventProtobufProduceConsumeAppTest.java
      render:
        file: tutorials/multiple-event-types/kafka/markup/test/make-produce-consume-application-test.adoc
    - action: make_file
      file: src/test/java/io/confluent/developer/MultiEventAvroProduceConsumeAppTest.java
      render:
        skip: true
  - title: Invoke the tests
    content:
    - action: execute
      file: tutorial-steps/test/invoke-tests.sh
      render:
        file: tutorials/multiple-event-types/kafka/markup/test/invoke-tests.adoc
ccloud:
  steps:
  - title: Run your app with Confluent Cloud
    content:
    - action: skip
      render:
        file: shared/markup/ccloud/try-ccloud-properties.adoc
