---
  version: '2'
  
  services:
    zookeeper:
      image: confluentinc/cp-zookeeper:5.4.1
      hostname: zookeeper
      container_name: zookeeper
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
  
    broker:
      image: confluentinc/cp-enterprise-kafka:5.4.1
      hostname: broker
      container_name: broker
      depends_on:
        - zookeeper
      ports:
        - "29092:29092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9092
        CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
        CONFLUENT_METRICS_ENABLE: 'true'
        CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    
    schema-registry:
      image: confluentinc/cp-schema-registry:5.4.1
      hostname: schema-registry
      container_name: schema-registry
      depends_on:
        - zookeeper
        - broker
      ports:
        - "8081:8081"
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
  
    ksqldb-server:
      image: 368821881613.dkr.ecr.us-west-2.amazonaws.com/confluentinc/ksqldb-server:master-latest
      hostname: ksqldb-server
      container_name: ksqldb-server
      depends_on:
        - broker
        - schema-registry
      ports:
        - "8088:8088"
      environment:
        KSQL_CONFIG_DIR: "/etc/ksqldb"
        KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/opt/app/log4j/log4j.properties"
        KSQL_BOOTSTRAP_SERVERS: "broker:9092"
        KSQL_HOST_NAME: ksqldb-server
        KSQL_LISTENERS: "http://0.0.0.0:8088"
        KSQL_CACHE_MAX_BYTES_BUFFERING: 0
        KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
        KSQL_KSQL_LOGGING_PROCESSING_TOPIC_NAME: 'ksql_processing_log'
        KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
        KSQL_KSQL_LOGGING_PROCESSING_ROWS_INCLUDE: 'true'
      volumes:
        - ./log4j:/opt/app/log4j
  
    ksqldb-cli:
      image: 368821881613.dkr.ecr.us-west-2.amazonaws.com/confluentinc/ksqldb-cli:master-latest
      container_name: ksqldb-cli
      depends_on:
        - broker
        - ksqldb-server
      entrypoint: /bin/sh
      tty: true
      environment:
        KSQL_CONFIG_DIR: "/etc/ksqldb"
      volumes:
        - ./src:/opt/app/src
        - ./test:/opt/app/test
