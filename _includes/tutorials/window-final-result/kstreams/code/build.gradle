plugins {
    id "java"
    id "application"
    id "com.google.cloud.tools.jib" version "2.6.0"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "com.commercehub.gradle.plugin.avro" version "0.17.0"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"
version = "0.0.1-SNAPSHOT"


mainClassName = "io.confluent.developer.WindowFinalResult"

repositories {
    jcenter()

    maven {
        url "https://packages.confluent.io/maven"
    }
}

dependencies {
    implementation "org.apache.avro:avro:1.10.0"

    implementation group: 'com.typesafe', name: 'config', version: '1.3.4'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    implementation group: 'org.apache.kafka', name: 'kafka-streams', version: '2.5.0'
    implementation group: 'io.confluent', name: 'kafka-streams-avro-serde', version: '5.5.1'

    testImplementation "junit:junit:4.13.1"
    testImplementation "org.apache.kafka:kafka-streams-test-utils:2.5.0"
    testImplementation "com.github.grantwest.eventually:hamcrest-eventually-matchers:0.0.3"

    // helpers
    implementation group: 'com.jason-goodwin', name: 'better-monads', version: '0.4.1'
    implementation group: 'com.typesafe.akka', name: 'akka-stream-kafka_2.13', version: '1.0.5'
}

shadowJar {
    archiveBaseName = "kstreams-${rootProject.name}"
    archiveClassifier = ''
}


task createTopics(type: JavaExec) {
    main = 'io.confluent.developer.helper.TopicCreation'
    classpath = sourceSets.main.runtimeClasspath
}

task publishSchemas(type: JavaExec) {
    main = 'io.confluent.developer.helper.SchemaPublication'
    classpath = sourceSets.main.runtimeClasspath
}

task consumeResult(type: JavaExec) {
    main = 'io.confluent.developer.helper.ResultConsumer'
    classpath = sourceSets.main.runtimeClasspath
}

run.dependsOn {
    [createTopics, publishSchemas]
}

jib {
    container.mainClass = mainClassName
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}
