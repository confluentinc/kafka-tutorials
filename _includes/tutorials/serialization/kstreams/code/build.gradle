buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.21.0"
    classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.13"
  }
}

plugins {
  id "java"
  id "application"
  id "idea"
  id "com.google.cloud.tools.jib" version "2.6.0"
  id "com.github.johnrengelman.shadow" version "6.1.0"
  id "com.google.protobuf" version "0.8.13"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"
version = "0.0.1"

repositories {
  jcenter()

  maven {
    url "https://packages.confluent.io/maven"
  }
}

apply plugin: "com.commercehub.gradle.plugin.avro"
apply plugin: "com.github.johnrengelman.shadow"

dependencies {
  implementation "org.apache.avro:avro:1.10.0"
  implementation "com.google.protobuf:protobuf-java:3.13.0"
  implementation "org.slf4j:slf4j-simple:1.7.30"
  implementation "org.apache.kafka:kafka-streams:2.5.0"
  implementation "io.confluent:kafka-streams-avro-serde:5.5.1"
  implementation "io.confluent:kafka-streams-protobuf-serde:5.5.1"
  implementation 'com.google.code.gson:gson:2.8.6'

  testImplementation "org.apache.kafka:kafka-streams-test-utils:2.5.0"
  testImplementation 'junit:junit:4.13.1'
  testImplementation 'org.assertj:assertj-core:3.17.2'
}

test {
  testLogging {
    outputs.upToDateWhen { false }
    showStandardStreams = true
    events "passed", "skipped", "failed"
    exceptionFormat "full"
  }
}

jar {
  manifest {
    attributes(
        "Class-Path": configurations.compileClasspath.collect { it.getName() }.join(" "),
        "Main-Class": "io.confluent.developer.SerializationTutorial"
    )
  }
}

shadowJar {
  archiveBaseName = "kstreams-serialization-standalone"
  archiveClassifier = ''
}

// Define the main class for the application
mainClassName = 'io.confluent.developer.serialization.SerializationTutorial'

protobuf {
  generatedFilesBaseDir = "$buildDir/generated-main-proto-java/"

  protoc {
    artifact = "com.google.protobuf:protoc:3.13.0"
  }

}

clean {
  delete protobuf.generatedFilesBaseDir
}

idea {
  module {
    sourceDirs += file("${buildDir}/generated-main-proto-java/")
  }
}
