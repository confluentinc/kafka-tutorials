steps:
  - name: initialize
    action: execute
    file: recipe-steps/dev/init.sh

  - name: make the build file
    change_directory: split-stream
    action: make_file
    file: build.gradle

  - name: set up the gradle wrapper
    action: execute
    file: recipe-steps/dev/gradle-wrapper.sh

  - name: make the configuration directory
    action: execute
    file: recipe-steps/dev/make-configuration-dir.sh

  - name: make the dev props file
    action: make_file
    file: configuration/dev.properties

  - name: make a directory for Avro files
    action: execute
    file: recipe-steps/dev/make-avro-dir.sh

  - name: make Avro schema
    action: make_file
    file: src/main/avro/acting_event.avsc

  - name: build the project
    action: execute
    file: recipe-steps/dev/build-project.sh

  - name: make the source directory
    action: execute
    file: recipe-steps/dev/make-src-dir.sh

  - name: make the main Java file
    action: make_file
    file: src/main/java/io/confluent/developer/SplitStream.java

  - name: make an uberjar
    action: execute
    file: recipe-steps/dev/build-uberjar.sh

  - name: run the jar
    action: execute_async
    file: recipe-steps/dev/run-dev-app.sh

  - name: run the producer
    action: execute
    file: recipe-steps/dev/console-producer.sh
    stdin: recipe-steps/dev/input-events.json

  - name: run the drama consumer
    action: execute_async
    file: recipe-steps/dev/console-consumer-drama.sh
    stdout: recipe-steps/dev/outputs/actual-drama-events.json

  - name: run the fantasy consumer
    action: execute_async
    file: recipe-steps/dev/console-consumer-fantasy.sh
    stdout: recipe-steps/dev/outputs/actual-fantasy-events.json

  - name: run the other consumer
    action: execute_async
    file: recipe-steps/dev/console-consumer-other.sh
    stdout: recipe-steps/dev/outputs/actual-other-events.json

  - name: wait for the consumers to read the messages
    action: sleep
    ms: 5000
